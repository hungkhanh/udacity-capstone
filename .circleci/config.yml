version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1
  aws-ecs: circleci/aws-ecs@3.2.0

commands:
  install_hadolint:
    description: "Install hadolint v2.12.0"
    steps:
      - run:
          command: |
            wget -O ~/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
            sudo chmod +x ~/hadolint

jobs:
  build-backend:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Build backend
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-backend:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Test backend
          command: |
            cd backend
            npm install
            npm run test

  lint-backend:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - install_hadolint
      - run:
          name: Lint dockerfile backend
          command: |
            cd backend
            ~/hadolint Dockerfile
      - run:
          name: Lint backend
          command: |
            cd backend
            npm install
            npm run lint

  build-frontend:
    docker:
      - image: cimg/node:16.20
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build frontend
          command: |
            cd frontend
            npm install --force
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  test-frontend:
    docker:
      - image: cimg/node:16.20
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Test frontend
          command: |
            cd frontend
            npm install --force
            npm run test

  lint-frontend:
    docker:
      - image: cimg/node:16.20
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - install_hadolint
      - run:
          name: Lint dockerfile frontend
          command: |
            cd frontend
            ~/hadolint Dockerfile
      - run:
          name: Lint frontend
          command: |
            cd frontend
            npm install --force
            npm run lint

workflows:
  backend:
    jobs:
      - lint-backend
      - build-backend:
          requires: [lint-backend]
      - test-backend:
          requires: [build-backend]
      - aws-ecr/build-and-push-image:
          context: udacity
          create-repo: true
          dockerfile: backend/Dockerfile
          region: AWS_DEFAULT_REGION
          path: .
          repo: udacity
          tag: "backend-${CIRCLE_WORKFLOW_ID:0:7}"
          requires: [test-backend]
      - aws-ecs/deploy-service-update:
          aws-region: AWS_DEFAULT_REGION
          family: "udacit-service"
          cluster-name: "udacity-cluster"
          container-image-name-updates: "container=udacity-backend-service,tag=backend-${CIRCLE_WORKFLOW_ID:0:7}"
          requires: [aws-ecr/build-and-push-image]

  frontend:
    jobs:
      - lint-frontend
      - build-frontend:
          requires: [lint-frontend]
      # - test-frontend:
      #     requires: [build-frontend]
      - aws-ecr/build-and-push-image:
          context: udacity
          create-repo: true
          dockerfile: frontend/Dockerfile
          region: AWS_DEFAULT_REGION
          path: .
          repo: udacity
          tag: "frontend-${CIRCLE_WORKFLOW_ID:0:7}"
          # requires: [test-frontend]
