version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1

jobs:
  build-backend:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Build backend
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-backend:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Test backend
          command: |
            cd backend
            npm install
            npm run test

  scan-backend:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Scan backend
          command: |
            cd backend
            npm install
            npm audit fix

  lint-backend:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - run:
          name: Lint backend
          command: |
            cd backend
            npm install
            npm run lint

  build-frontend:
    docker:
      - image: cimg/node:16.20
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build frontend
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  test-frontend:
    docker:
      - image: cimg/node:16.20
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Test frontend
          command: |
            cd frontend
            npm install
            npm run test

  scan-frontend:
    docker:
      - image: cimg/node:16.20
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Scan frontend
          command: |
            cd frontend
            npm install
            npm audit fix

workflows:
  default:
    jobs:
      - build-backend
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - lint-backend:
          requires: [build-backend]
      - build-frontend
      # - test-frontend:
      #     requires: [build-frontend]
      - scan-frontend:
          requires: [build-frontend]
      - lint-frontend:
          requires: [build-frontend]          

