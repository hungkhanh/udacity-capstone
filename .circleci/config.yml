version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1

jobs:
  build-backend:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Build backend
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-backend:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Test backend
          command: |
            cd backend
            npm install
            npm run test

  scan-backend:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Scan backend
          command: |
            cd backend
            npm install
            npm audit fix

  lint-backend:
    docker:
      - image: cimg/node:18.12
    steps:
      - checkout
      - run:
          name: Lint backend
          command: |
            cd backend
            npm install
            npm run lint

  build-and-deploy-backend:
    jobs:
      - aws-ecr/build-and-push-image:
          aws-access-key-id: $AWS_ACCESS_KEY_ID
          aws-secret-access-key: $AWS_SECRET_ACCESS_KEY
          region: $AWS_DEFAULT_REGION
          registry-id: $AWS_ECR_REGISTRY_ID
          aws-cli-version: latest
          dockerfile: backend/Dockerfile
          repo: "udacity"
          tag: "${CIRCLE_WORKFLOW_ID:0:7}"

          # context: https://github.com/hungkhanh/udacity-capstone/tree/master/backend
          # create-repo: true
          # executor: aws-ecr/default
          # extra-build-args: '--compress'
          # new-profile-name: newProfileName
          # no-output-timeout: 20m
          # path: pathToMyDockerfile
          # platform: linux/amd64
          # profile-name: myProfileName
          # public-registry: false
          # push-image: true
          # repo-policy-path: repo-policy.json
          # repo-scan-on-push: true
          # role-arn: arn:aws:iam::123456789012:role/testing
          # set-repo-policy: true
          # skip-when-tags-exist: false
          # source-profile: sourceProfileName

workflows:
  default:
    jobs:
      - build-backend:
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - lint-backend:
          requires: [build-backend]
      - build-and-deploy-backend:
          requires: [test-backend, scan-backend, lint-backend]
